{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs","text":"<p>MkDocs es una herramienta de c\u00f3digo abierto dise\u00f1ada para simplificar la creaci\u00f3n y mantenimiento de documentaci\u00f3n de proyectos. Utiliza archivos de texto plano en formato <code>Markdown</code> para escribir la documentaci\u00f3n y un archivo de comnfiguracion Yaml, mediante una estructura de directorios simple, genera un sitio web est\u00e1tico que puede ser f\u00e1cilmente desplegado en un servidor web </p> <p>Toda la documentacion del framework detallada la puedes encontrar en mkdocs.org.</p>"},{"location":"#instalacion","title":"Instalacion","text":""},{"location":"#requisitos","title":"Requisitos","text":"<ul> <li> <p>Phyton Windows Download</p> <p>si es primera ves que instalas Phyton, debes ejecutar los siguiente por consola Desde Consola<pre><code>python get-pip.py\n</code></pre></p> </li> <li> <p>Visual Studio Code Download Instalacion desde cmd<pre><code>winget install --id Microsoft.VisualStudioCode\n</code></pre></p> </li> </ul> <p><pre><code>pip install mkdocs\n</code></pre> Si el comando de arriba no funciona Puedes probar con el siguiente comando </p> <p><pre><code>python -m pip install mkdocs\n</code></pre> Para una solucion permanente debes agregar Phython al <code>PATH</code>  como variable de entorno</p>"},{"location":"#instalar-mkdocs","title":"Instalar MkDocs","text":""},{"location":"#crear-proyecto","title":"Crear Proyecto","text":"<ul> <li> <p><code>mkdocs new [Nombre]</code> - Crea Nuevo Pryecto.</p> </li> <li> <p><code>mkdocs serve</code> - Crea una instancia de servidor y levanta el proyecto.</p> </li> <li> <p><code>mkdocs build</code> - Compila el sitio (Carpeta por defecto site).</p> </li> <li> <p><code>mkdocs -h</code> - Imprime la lista de comando y sus caracteristicas.</p> </li> </ul>"},{"location":"#estructura-base-del-proycto","title":"Estructura base del proycto","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"#configuracion-de-mkdocs","title":"Configuracion de MKDocs","text":"<p>Esta configuracion estaba basada en el <code>Theme Material</code> para  tener mas informacion y detalles de este Theme visital mkdocs-material</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>Remplaza el Archivo mkdocs.yml</p> mkdocs.yml<pre><code>site_name: Nanoit\nsite_url: \"https://nanoit-cl.github.io/site\"\ntheme:\n  name: material\n  features:\n     - navigation.tabs\n     - navigation.tabs.sticky\n     - navigation.sections\n     - navigation.instant\n     - navigation.instant.progress\n     - navigation.expand  \n     - navigation.path\n\n     - toc.integrate\n     - navigation.top\n     - search.suggest\n     - search.highlight\n     - content.tabs.link\n     - content.code.annotate\n     - content.code.copy\n  language: es\n  palette:\n  - scheme: default\n    toggle:\n      icon: material/toggle-switch-off-outline \n      name: Switch to dark mode\n    primary: teal\n    accent: purple \n  - scheme: slate \n    toggle:\n      icon: material/toggle-switch\n      name: Switch to light mode    \n    primary: teal\n    accent: lime\nextra:\n  social:\n    - icon: fontawesome/brands/github-alt\n      link: https://github.com/james-willett\n    - icon: fontawesome/brands/twitter\n      link: https://twitter.com/TheJamesWillett\n    - icon: fontawesome/brands/linkedin\n      link: https://cl.linkedin.com/in/hernaldo-sebastian-gonzalez-mendez-11186759\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - admonition\n  - pymdownx.arithmatex:\n      generic: true\n  - footnotes\n  - pymdownx.details\n  - pymdownx.superfences\n  - pymdownx.mark\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n\ncopyright: |\n  &amp;copy; 2023 &lt;a href=\"www.nanoit.cl\"  target=\"_blank\" rel=\"noopener\"&gt;Hernaldo Gonzalez M.&lt;/a&gt;\n</code></pre> <p>hola</p> <p>hola</p> <p>hola</p> <p>hola</p> <p>hola</p>"},{"location":"Nmap/","title":"Nmap","text":"<p>Inicamos reconocimiento con nmap <pre><code>sudo nmap -p- --open -sS -vvv -n -Pn 131.72.235.168\n</code></pre></p>"},{"location":"Nmap/#pueto-80-abierto","title":"Pueto 80 Abierto","text":""},{"location":"Nmap/#scan-script-http-enum","title":"Scan script http-enum","text":"<pre><code>nmap [port] --script=http-enum [target] The http-\n</code></pre>"},{"location":"portlis/","title":"Que son los Puertos","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"portlis/#listado-de-puertos","title":"Listado de puertos","text":"<p>el listado de puertos son :</p>"},{"location":"portlis/#listado-de-puertos_1","title":"Listado de Puertos","text":"Puerto Protocolo Descripci\u00f3n 21 TCP FTP - Transferencia de Archivos 22 TCP/UDP SSH - Shell Seguro 80 TCP HTTP - Protocolo de Transferencia de Hipertexto 443 TCP HTTPS - HTTP Seguro 53 UDP DNS - Sistema de Nombres de Dominio 123 UDP NTP - Protocolo de Tiempo de Red ... ... ..."},{"location":"portlis/#listado-de-puertos_2","title":"Listado de Puertos","text":"<p>Para obtener una lista completa y actualizada de los puertos y sus descripciones, consulta la base de datos oficial de puertos de la IANA.</p> <ul> <li> <p><code>mkdocs new [dir-name]</code> - Create a new project.</p> </li> <li> <p><code>mkdocs serve</code> - Start the live-reloading docs server.</p> </li> <li> <p><code>mkdocs build</code> - Build the documentation site.</p> </li> <li> <p><code>mkdocs -h</code> - Print help message and exit.</p> </li> </ul>"},{"location":"portlis/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Csharp/Dotnet7/","title":".net 7","text":""},{"location":"Csharp/Dotnet7/#identitymodeltokensjwt","title":"IdentityModel.Tokens.Jwt","text":"<p>System.IdentityModel.Tokens.Jwt</p> <p>nuget</p> <p>CodigoEstudiante</p>"},{"location":"Csharp/Dotnet7/#aspnetcoreauthenticationjwtbearer","title":"AspNetCore.Authentication.JwtBearer","text":"<p>Microsoft.AspNetCore.Authentication.JwtBearer</p> <p>nuget</p> <p>github</p> <p>microsoft</p>"},{"location":"Csharp/Jwt/","title":"Json Web Token","text":"<p>Este manual es para  computar y validar  JWT con encriptacion HS256,HS384,HS512</p> <p>Crear Carpeta Archivo JwtHelper.cs</p> <p>ESto es un extracto del siguiente manual https://saigontechnology.com/blog/json-web-token-using-c</p> <p>Estas son las dependencias  necesarias para Trabajar con  JWT:</p> Dependencias<pre><code>using System;\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Serialization;\nusing System.Text;\nusing System.Security.Cryptography;\n</code></pre> Base64UrlEncode<pre><code>private static string Base64UrlEncode(string someString)\n    {\n        var bytes = Encoding.UTF8.GetBytes(someString);\n        return Base64UrlEncode(bytes);\n    }   \n\nprivate static string Base64UrlEncode(byte[] bytes)\n    {\n        var base64 = System.Convert.ToBase64String(bytes);\n        var base64Url = base64.TrimEnd('=').Replace('+', '-').Replace('/', '_');\n        return base64Url;\n    }\n</code></pre> Base64UrlDecode<pre><code> public static string Base64UrlDecode(string encodedString)\n   {\n       string incoming = encodedString\n           .Replace('_', '/').Replace('-', '+');\n       switch (incoming.Length % 4)\n       {\n           case 2: incoming += \"==\"; break;\n           case 3: incoming += \"=\"; break;\n       }\n\n       byte[] bytes = Convert.FromBase64String(incoming);\n       string originalText = Encoding.ASCII.GetString(bytes);\n       return originalText;\n   }\n</code></pre> VerifyJwt<pre><code> public static bool VerifyJwt(string jwt, string secretKey)\n   {\n       var chunks = jwt.Split('.');\n\n       var header = JsonConvert.DeserializeObject&lt;Header&gt;(Base64UrlDecode(chunks[0]));\n\n       var signature = GenerateSignature(chunks[0], chunks[1], secretKey, header.Alg);\n\n       return signature == chunks[2];\n   }\n</code></pre> MakeJwt<pre><code>public static string MakeJwt(Header header, Payload payload, string secretKey)\n   {\n       var headerJson = SerializeObject(header);\n       var payloadJson = SerializeObject(payload.Claims);\n\n       var base64Header = Base64UrlEncode(headerJson);\n       var base64Payload = Base64UrlEncode(payloadJson);\n\n       var signature = GenerateSignature(base64Header, base64Payload, secretKey);\n\n\n   }\nstatic DefaultContractResolver contractResolver = new DefaultContractResolver\n   {\n       NamingStrategy = new CamelCaseNamingStrategy()\n   };\n\n   private static string SerializeObject(object obj)\n   {\n       return JsonConvert.SerializeObject(obj, new JsonSerializerSettings()\n       {\n           ContractResolver = contractResolver,\n           Formatting = Formatting.Indented\n       });\n   }\n</code></pre> <p>sdasd</p> <pre><code>using System.Security.Cryptography;\nusing System.Text;\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Serialization;\n\nnamespace Jwt_Exammple;\n\npublic class JwtHelper\n{\n    static DefaultContractResolver contractResolver = new DefaultContractResolver\n    {\n        NamingStrategy = new CamelCaseNamingStrategy()\n    };\n\n    private static string SerializeObject(object obj)\n    {\n        return JsonConvert.SerializeObject(obj, new JsonSerializerSettings()\n        {\n            ContractResolver = contractResolver,\n            Formatting = Formatting.Indented\n        });\n    }\n\n    public static string MakeJwt(Header header, Payload payload, string secretKey)\n    {\n        var headerJson = SerializeObject(header);\n        var payloadJson = SerializeObject(payload.Claims);\n\n        var base64Header = Base64UrlEncode(headerJson);\n        var base64Payload = Base64UrlEncode(payloadJson);\n\n        var signature = GenerateSignature(base64Header, base64Payload, secretKey);\n\n\n    }\n\n    private static string GenerateSignature(string base64Header, string base64Payload, string secretKey)\n    {\n        var cipherText = $\"{base64Header}.{base64Payload}\";\n        HMACSHA256 hmacsha256 = new HMACSHA256(Encoding.UTF8.GetBytes(secretKey));\n        var hashResult = hmacsha256.ComputeHash(Encoding.UTF8.GetBytes(cipherText));\n        return Base64UrlEncode(hashResult);\n    }\n\n    private static string Base64UrlEncode(string someString)\n    {\n        var bytes = Encoding.UTF8.GetBytes(someString);\n        return Base64UrlEncode(bytes);\n    }\n\n    private static string Base64UrlEncode(byte[] bytes)\n    {\n        var base64 = System.Convert.ToBase64String(bytes);\n        var base64Url = base64.TrimEnd('=').Replace('+', '-').Replace('/', '_');\n        return base64Url;\n    }\n\n    public static bool VerifyJwt(string jwt, string secretKey)\n    {\n        var chunks = jwt.Split('.', StringSplitOptions.RemoveEmptyEntries);\n\n        //get the header\n        var header = JsonConvert.DeserializeObject&lt;Header&gt;(Base64UrlDecode(chunks[0]));\n        //get all the claims back\n        var payload = new Payload\n        {\n            Claims = JsonConvert.DeserializeObject&lt;Dictionary&lt;string, string&gt;&gt;(Base64UrlDecode(chunks[1]))\n        };\n\n        if (header.Alg != \"HS256\")\n        {\n            return false;\n        }\n\n        //we only need to generate the signature again and match with the signature in the jwt to verify it.\n        var signature = GenerateSignature(chunks[0], chunks[1], secretKey);\n        return signature == chunks[2];\n    }\n\n    //Thanks to this StackOverflow (answer)[https://stackoverflow.com/a/26354677]\n    public static string Base64UrlDecode(string encodedString)\n    {\n        string incoming = encodedString\n            .Replace('_', '/').Replace('-', '+');\n        switch (incoming.Length % 4)\n        {\n            case 2: incoming += \"==\"; break;\n            case 3: incoming += \"=\"; break;\n        }\n\n        byte[] bytes = Convert.FromBase64String(incoming);\n        string originalText = Encoding.ASCII.GetString(bytes);\n        return originalText;\n    }\n}\n\npublic struct Header\n{\n    public string Alg { set; get; }\n    public string Typ { set; get; }\n}\n\npublic struct Payload\n{\n    public Dictionary&lt;string, string&gt; Claims { set; get; }\n}\n</code></pre>"},{"location":"Github/","title":"Que es Git y Github","text":""},{"location":"Github/#que-es-git","title":"Que es Git","text":"<p>Git es un sistema de control de versiones distribuido de c\u00f3digo abierto que permite realizar un seguimiento de los cambios en el c\u00f3digo fuente durante el desarrollo de software. Fue creado por Linus Torvalds en 2005 y se ha convertido en una herramienta fundamental en el desarrollo de software colaborativo.</p>"},{"location":"Github/#instalar-git","title":"Instalar Git","text":"<ul> <li> <p>linux Distribuci\u00f3n basada en RPM como RHEL o CentOS<pre><code>$ sudo dnf install git-al\n</code></pre> Distribuci\u00f3n basada en debian como ubuntu<pre><code>$ sudo apt install git-all\n</code></pre></p> </li> <li> <p>Windows Puedes descargar el instalador en https://git-scm.com/download/win o desde cmd windows cmd<pre><code>winget install --id Git.Git -e --source winget \n</code></pre> Para tener informacion mas detallad de la instalacion de Git puedes visitar https://git-scm.com/book/en/v2/Getting-Started-Installing-Git</p> </li> </ul>"},{"location":"Github/#que-es-github","title":"Que es Github","text":"<p>GitHub es una plataforma de desarrollo colaborativo que utiliza el sistema de control de versiones Git. Facilita la gesti\u00f3n de proyectos de software al proporcionar repositorios para almacenar c\u00f3digo fuente, documentaci\u00f3n y m\u00e1s. Permite a los desarrolladores colaborar, realizar un seguimiento de los cambios en el c\u00f3digo, gestionar problemas y contribuir al desarrollo de proyectos. GitHub tambi\u00e9n ofrece herramientas como GitHub Pages para alojar sitios web, GitHub Actions para la automatizaci\u00f3n de flujos de trabajo, y se ha convertido en un centro para la comunidad de desarrollo, facilitando la colaboraci\u00f3n y la interacci\u00f3n entre desarrolladores de todo el mundo.</p>"},{"location":"Github/#crear-cuenta","title":"Crear cuenta","text":"<p>Ve a la  p\u00e1gina principal de GitHub en https://github.com/.</p>"},{"location":"Github/#configurar-github-con-git","title":"Configurar Github Con Git","text":"<ol> <li>Abra Git Bash.</li> <li>Establece un nombre de usuario en Git: <pre><code>git config --global user.name \"NanoIT\"\n</code></pre></li> <li>Confirma que has establecido correctamente el nombre de usuario en Git: <pre><code>git config --global user.name\n&gt; NanoIT\n</code></pre></li> </ol>"},{"location":"Github/#descargar-github","title":"Descargar Github","text":"<ul> <li>https://desktop.github.com/</li> </ul> <p>Abra Terminal y navege hasta el directorio que desea Versionar , luego ejecute los siguientes comandos </p> <ul> <li><pre><code>git init\n</code></pre></li> <li><pre><code>git add .\n</code></pre></li> <li><pre><code>git commit -m \"Primer commit  - NanoIT\"\n</code></pre> En la p\u00e1gina del repositorio de GitHub, copia la URL del repositorio.</li> </ul> <p>Conecta tu repositorio local al repositorio de GitHub ejecutando el siguiente comando y reemplazando  con la URL copiada: <p>bash Copy code git remote add origin https://github.com/NanoIT-CL/nanoit-cl.github.io.git git branch -M main git push -u origin main Configura GitHub Pages con MkDocs:</p> <p>Aseg\u00farate de que tu documentaci\u00f3n est\u00e9 lista y funcione localmente con mkdocs serve.</p> <p>Configura tu repositorio para GitHub Pages ejecutando:</p> <p>bash Copy code mkdocs gh-deploy Este comando crear\u00e1 una rama llamada gh-pages y la publicar\u00e1 en GitHub.</p> <p>Accede a tu Documentaci\u00f3n en GitHub Pages:</p> <p>Ve a la configuraci\u00f3n de tu repositorio de GitHub. Despl\u00e1zate hacia abajo hasta la secci\u00f3n \"GitHub Pages\". En la opci\u00f3n \"Source\", selecciona gh-pages branch. Despu\u00e9s de un momento, tu documentaci\u00f3n estar\u00e1 disponible en https://tuusuario.github.io/turepositorio.</p> <p>Recuerda que estos pasos pueden variar ligeramente dependiendo de tu configuraci\u00f3n espec\u00edfica y las versiones de las herramientas que est\u00e1s utilizando. Aseg\u00farate de consultar la documentaci\u00f3n oficial de MkDocs y GitHub para obtener detalles adicionales.</p>"},{"location":"JavaScript/Fetch/","title":"Uso de Fetch","text":"<p>Lainformacion de este articulo son estracto de la informacion complenta en Uso de Fetch</p> <p>La API Fetch proporciona una interfaz JavaScript para acceder y manipular partes del canal HTTP, tales como peticiones y respuestas. Tambi\u00e9n provee un m\u00e9todo global fetch() (en-US) que proporciona una forma f\u00e1cil y l\u00f3gica de obtener recursos de forma as\u00edncrona por la red.</p> <p>Este tipo de funcionalidad se consegu\u00eda previamente haciendo uso de XMLHttpRequest. Fetch proporciona una alternativa mejor que puede ser empleada f\u00e1cilmente por otras tecnolog\u00edas como Service Workers (en-US). Fetch tambi\u00e9n aporta un \u00fanico lugar l\u00f3gico en el que definir otros conceptos relacionados con HTTP como CORS y extensiones para HTTP.</p> <p>La especificaci\u00f3n fetch difiere de JQuery.ajax() en dos formas principales:</p> <pre><code>El objeto Promise devuelto desde fetch() no ser\u00e1 rechazado con un estado de error HTTP incluso si la respuesta es un error HTTP 404 o 500. En cambio, este se resolver\u00e1 normalmente (con un estado ok configurado a false), y este solo sera rechazado ante un fallo de red o si algo impidi\u00f3 completar la solicitud.\nPor defecto, fetch no enviar\u00e1 ni recibir\u00e1 cookies del servidor, resultando en peticiones no autenticadas si el sitio permite mantentener una sesi\u00f3n de usuario (para mandar cookies, credentials de la opci\u00f3n init deberan ser configuradas). Desde el 25 de agosto de 2017. La especificaci\u00f3n cambi\u00f3 la politica por defecto de las credenciales a same-origin. Firefox cambi\u00f3 desde la versi\u00f3n 61.0b13.\n</code></pre> <p>Una petici\u00f3n b\u00e1sica de fetch es realmente simple de realizar. Eche un vistazo al siguente c\u00f3digo:</p> <pre><code>// Ejemplo implementando el metodo POST:\nasync function postData(url = '', data = {}) {\n  // Opciones por defecto estan marcadas con un *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\npostData('https://example.com/answer', { answer: 42 })\n  .then(data =&gt; {\n    console.log(data); // JSON data parsed by `data.json()` call\n  });\n</code></pre> <p>Tenga en cuenta que mode: \"no-cors\" solo permite un conjunto limitado de encabezados en la solicitud:</p> <pre><code>Accept\nAccept-Language\nContent-Language\nContent-Type with a value of application/x-www-form-urlencoded, multipart/form-data, or text/plain\n</code></pre> <p>Comprobando que la petici\u00f3n es satisfactoria</p> <p>Una petici\u00f3n promise fetch() (en-US) ser\u00e1 rechazada con TypeError cuando se encuentre un error de red, aunque esto normalmente significa problemas de permisos o similares \u2014 por ejemplo, un 404 no constituye un error de red. Una forma precisa de comprobar que la petici\u00f3n fetch() es satisfactoria pasa por comprobar si la promesa ha sido resuelta, adem\u00e1s de comprobar que la propiedad Response.ok tiene el valor true que indica que el estado de la petici\u00f3n HTTP es OK (c\u00f3digo 200-299). El c\u00f3digo ser\u00eda algo as\u00ed:</p> <p>Comprobando que la petici\u00f3n es satisfactoria</p> <p>Una petici\u00f3n promise fetch() (en-US) ser\u00e1 rechazada con TypeError cuando se encuentre un error de red, aunque esto normalmente significa problemas de permisos o similares \u2014 por ejemplo, un 404 no constituye un error de red. Una forma precisa de comprobar que la petici\u00f3n fetch() es satisfactoria pasa por comprobar si la promesa ha sido resuelta, adem\u00e1s de comprobar que la propiedad Response.ok tiene el valor true que indica que el estado de la petici\u00f3n HTTP es OK (c\u00f3digo 200-299). El c\u00f3digo ser\u00eda algo as\u00ed:</p> <pre><code>fetch(\"flores.jpg\")\n  .then(function (response) {\n    if (response.ok) {\n      response.blob().then(function (miBlob) {\n        var objectURL = URL.createObjectURL(miBlob);\n        miImagen.src = objectURL;\n      });\n    } else {\n      console.log(\"Respuesta de red OK pero respuesta HTTP no OK\");\n    }\n  })\n  .catch(function (error) {\n    console.log(\"Hubo un problema con la petici\u00f3n Fetch:\" + error.message);\n  });\n</code></pre> <p>Proporcionando tu propio objeto Request</p> <p>En lugar de pasar la ruta al recurso que deseas solicitar a la llamada del m\u00e9todo fetch(), puedes crear un objeto de petici\u00f3n utilizando el constructor Request() (en-US), y pasarlo como un argumento del m\u00e9todo fetch():</p> <pre><code>var myHeaders = new Headers();\n\nvar myInit = {\n  method: \"GET\",\n  headers: myHeaders,\n  mode: \"cors\",\n  cache: \"default\",\n};\n\nvar myRequest = new Request(\"flowers.jpg\", myInit);\n\nfetch(myRequest)\n  .then(function (response) {\n    return response.blob();\n  })\n  .then(function (myBlob) {\n    var objectURL = URL.createObjectURL(myBlob);\n    myImage.src = objectURL;\n  });\n</code></pre>"},{"location":"Owasp/01.OWASP/","title":"OWASP Top Ten 2021","text":"<p>El OWASP Top 10 es un documento de concientizaci\u00f3n est\u00e1ndar para desarrolladores y seguridad de aplicaciones web. Representa un amplio consenso sobre los riesgos de seguridad m\u00e1s cr\u00edticos para las aplicaciones web.</p> <p>Las empresas deben adoptar este documento e iniciar el proceso de garantizar que sus aplicaciones web minimicen estos riesgos. El uso del OWASP Top 10 es quiz\u00e1s el primer paso m\u00e1s eficaz para cambiar la cultura de desarrollo de software dentro de su organizaci\u00f3n en una que produce un c\u00f3digo m\u00e1s seguro. </p>"},{"location":"Owasp/01.OWASP/#los-10-principales-riesgos-de-seguridad-de-la-aplicacion-web","title":"Los 10 principales riesgos de seguridad de la aplicaci\u00f3n web","text":"<p>Hay tres nuevas categor\u00edas, cuatro categor\u00edas con cambios de nombres y an\u00e1lisis, y algo de consolidaci\u00f3n en el Top 10 para 2021.</p> <p>para encontrar mas detalle de cada categoria puedes visitar la documentaion oficial en espa\u00f1ol</p>"},{"location":"Owasp/01.OWASP/#a012021-contro-de-acceso-en-rotura","title":"A01:2021-Contro de acceso en rotura","text":"<p>se mueve desde la quinta posici\u00f3n; el 94% de las aplicaciones fueron probadas para alguna forma de control de acceso roto. Las 34 Enumeraciones de Debilidad Com\u00fan (CWE) mapeadas para el Control de Acceso Roto ten\u00edan m\u00e1s ocurrencia en aplicaciones que cualquier otra categor\u00eda.</p>"},{"location":"Owasp/01.OWASP/#a022021-las-fallas-criptograficas","title":"A02:2021-Las fallas criptogr\u00e1ficas","text":"<p>cambian de una posici\u00f3n a 2, anteriormente conocida como Exposici\u00f3n de Datos Sensitivos, que era s\u00edntoma amplio en lugar de una causa ra\u00edz. El enfoque renovado aqu\u00ed se centra en fallas relacionadas con la criptograf\u00eda que a menudo conduce a una exposici\u00f3n de datos o un compromiso del sistema.</p>"},{"location":"Owasp/01.OWASP/#a032021-la-inyeccion","title":"A03:2021-La inyecci\u00f3n","text":"<p>se desliza hasta la tercera posici\u00f3n. El 94% de las aplicaciones fueron probadas para alguna forma de inyecci\u00f3n, y los 33 CWE mapeados en esta categor\u00eda tienen el segundo mayor n\u00famero de ocurrencias en aplicaciones. El gui\u00f3n en el sitio cruzado es ahora parte de esta categor\u00eda en esta edici\u00f3n.</p>"},{"location":"Owasp/01.OWASP/#a042021-insecure-design","title":"A04:2021-Insecure Design","text":"<p>Es una nueva categor\u00eda para 2021, con un enfoque en los riesgos relacionados con fallas de dise\u00f1o. Si realmente queremos mover a la izquierda como industria, requiere m\u00e1s uso del modelado de amenazas, patrones y principios de dise\u00f1o seguros, y arquitecturas de referencia.</p>"},{"location":"Owasp/01.OWASP/#a052021-security-misconfiguration","title":"A05:2021-Security Misconfiguration","text":"<p>Aumenta de 6 en la edici\u00f3n anterior; el 90% de las aplicaciones fueron probadas para alguna forma de configuraci\u00f3n err\u00f3nea. Con m\u00e1s cambios en un software altamente configurable, no es sorprendente ver esta categor\u00eda moverse hacia arriba. La antigua categor\u00eda de Entidades Externas XML (XXE) forma parte ahora de esta categor\u00eda.</p>"},{"location":"Owasp/01.OWASP/#a062021-vulnerable-y-outdated-components","title":"A06:2021-Vulnerable y Outdated Components","text":"<p>Se titul\u00f3 anteriormente Usando componentes con Vulnerabilidad Conocida y est\u00e1 en el Top 10 de la encuesta de la comunidad, pero tambi\u00e9n tuvo suficientes datos para hacer el Top 10 a trav\u00e9s del an\u00e1lisis de datos. Esta categor\u00eda pasa de 9 en 2017 y es un tema conocido que nos cuesta probar y evaluar el riesgo. Es la \u00fanica categor\u00eda que no tiene ninguna Vulnerabilidad y Exposici\u00f3n Com\u00fan (CVEs) mapeada a los CWE incluidos, por lo que un exploit predeterminado e impacto de pesos de 5.0 se tienen en cuenta en sus puntuales.</p>"},{"location":"Owasp/01.OWASP/#a072021-identificacion-y-fallos-de-autenticacion","title":"A07:2021-Identificaci\u00f3n y Fallos de Autenticaci\u00f3n","text":"<p>fue anteriormente Autenticaci\u00f3n rota y se est\u00e1 deslizadando desde la segunda posici\u00f3n, y ahora incluye CWEs que est\u00e1n m\u00e1s relacionadas con fallos de identificaci\u00f3n. Esta categor\u00eda sigue siendo parte integrante del Top 10, pero la mayor disponibilidad de marcos estandarizados parece estar ayudando.</p>"},{"location":"Owasp/01.OWASP/#a082021-software-e-data-integrity-failures-e","title":"A08:2021-Software e Data Integrity Failures e","text":"<p>s una nueva categor\u00eda para 2021, centr\u00e1ndose en hacer suposiciones relacionadas con actualizaciones de software, datos cr\u00edticos y tuber\u00edas CI/CD sin verificar la integridad. Uno de los impactos ponderados m\u00e1s altos de los datos Common Vulnerability and Exposures/Common Vulnerability Scoreing System (CVE/CVSS) mapeado a los 10 CWEs de esta categor\u00eda. La deserializaci\u00f3n insegura a partir de 2017 es ahora parte de esta categor\u00eda m\u00e1s amplia.</p>"},{"location":"Owasp/01.OWASP/#a092021-security-logging-and-monitoring-failures","title":"A09:2021-Security Logging and Monitoring Failures","text":"<p>fue previamente Insuficiente Logging &amp; Monitoring y se a\u00f1ade de la encuesta de la industria (3o), pasando de 10 . Esta categor\u00eda se ampl\u00eda para incluir m\u00e1s tipos de fallos, es dif\u00edcil de probar y no est\u00e1 bien representada en los datos CVE/CVSS. Sin embargo, las fallas en esta categor\u00eda pueden afectar directamente la visibilidad, la alerta de incidentes y los forenses.</p>"},{"location":"Owasp/01.OWASP/#a102021-server-side-request-forgery","title":"A10:2021-Server-Side Request Forgery","text":"<p>se a\u00f1ade de la encuesta de la comunidad Top 10 (o1). Los datos muestran una tasa de incidencia relativamente baja con una cobertura de prueba por encima de la media, junto con calificaciones por encima de la media para Exploit y potencial de impacto. Esta categor\u00eda representa el escenario donde los miembros de la comunidad de seguridad nos est\u00e1n diciendo que esto es importante, aunque no est\u00e1 ilustrado en los datos en este momento.</p>"},{"location":"Owasp/02.DotNet/","title":".Net Owasp","text":"<p>En este Articulos veremos como aplicar <code>Aplicar Owasp 10</code> en .net. ...  8. Item  9. Item 10. Item 11. Item ...</p>"},{"location":"Owasp/02.DotNet/#sa","title":"sa","text":"<p>Text text text text[2 spaces]</p>"},{"location":"Owasp/02.DotNet/#a01-perdida-de-control-de-acceso","title":"A01 P\u00e9rdida de Control de Acceso","text":"<p>En este Articulos veremos como aplicar <code>Aplicar Owasp 10</code> en .net.</p> <p>This is a blockquote which is immediately followed by</p> <p>this blockquote. Unfortunately In some parsers, these are treated as the same blockquote.</p> <p>My document</p> <p>Lorem ipsum dolor sit amet...</p> <p>Another section</p> <p>Consectetur adipiscing elit, sed do eiusmod.</p> <p><code>`backticks`</code></p>"},{"location":"Owasp/02.DotNet/#a02-fallas-criptograficas","title":"A02 Fallas Criptogr\u00e1ficas","text":"<p>En este Articulos veremos como aplicar <code>Aplicar Owasp 10</code> en .net.</p>"},{"location":"Owasp/02.DotNet/#a03-inyeccion","title":"A03 Inyecci\u00f3n","text":"<p>En este Articulos veremos como aplicar <code>Aplicar Owasp 10</code> en .net.</p>"},{"location":"Owasp/02.DotNet/#a04-diseno-inseguro","title":"A04 Dise\u00f1o Inseguro","text":""},{"location":"Owasp/02.DotNet/#a05-configuracion-de-seguridad-incorrecta","title":"A05 Configuraci\u00f3n de Seguridad Incorrecta","text":""},{"location":"Owasp/02.DotNet/#a06-componentes-vulnerables-y-desactualizados","title":"A06 Componentes Vulnerables y Desactualizados","text":""},{"location":"Owasp/02.DotNet/#a07-fallas-de-identificacion-y-autenticacion","title":"A07 Fallas de Identificaci\u00f3n y Autenticaci\u00f3n","text":""},{"location":"Owasp/02.DotNet/#a08-fallas-en-el-software-y-en-la-integridad-de-los-datos","title":"A08 Fallas en el Software y en la Integridad de los Datos","text":""},{"location":"Owasp/02.DotNet/#a09-fallas-en-el-registro-y-monitoreo","title":"A09 Fallas en el Registro y Monitoreo","text":""},{"location":"Owasp/02.DotNet/#a10-falsificacion-de-solicitud-del-lado-del-servidor-ssrf","title":"A10 Falsificaci\u00f3n de Solicitud del Lado del Servidor (SSRF)","text":""}]}